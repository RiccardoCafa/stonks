SELECT DISTINCT
    AGE_RATING,
    EXTRACT(MONTH FROM FIRST_RELEASE_DATE) AS RELEASE_DATE_MONTH,
    TIME_TO_BEAT / 3600 AS HOURS_TO_BEAT,
    FOLLOWS,
    TOTAL_RATING AS RATING,
    PRICE,
    STRING_AGG(
        DISTINCT GENRES.NAME,
        '!'
    ) AS GENRE,
    STRING_AGG(
        DISTINCT GAME_MODE.NAME,
        '!'
    ) AS GAME_MODE,
    STRING_AGG(
        DISTINCT PLAYER_PERSPECTIVES.NAME,
        '!'
    ) AS PLAYER_PERSPECTIVE,
    STRING_AGG(
        DISTINCT THEMES.NAME,
        '!'
    ) AS THEME
FROM
    GAME
    FULL JOIN
    GAME_GENRES
    ON GAME_GENRES.ID_GAME = GAME.ID
    FULL JOIN
    GENRES
    ON GAME_GENRES.ID_GENRE = GENRES.ID
    FULL JOIN
    GAME_THEMES
    ON GAME_THEMES.ID_GAME = GAME.ID
    FULL JOIN
    THEMES
    ON GAME_THEMES.ID_THEME = THEMES.ID
    FULL JOIN
    GAME_MODE_GAME
    ON GAME_MODE_GAME.ID_GAME = GAME.ID
    FULL JOIN
    GAME_MODE
    ON GAME_MODE_GAME.ID_GAME_MODE = GAME_MODE.ID
    FULL JOIN
    GAME_PLAYER_PERSPECTIVES
    ON GAME_PLAYER_PERSPECTIVES.ID_GAME = GAME.ID
    FULL JOIN
    PLAYER_PERSPECTIVES
    ON GAME_PLAYER_PERSPECTIVES.ID_PLAYER_PERSPECTIVE = PLAYER_PERSPECTIVES.ID
WHERE
    GAME.IS_USER = FALSE
    AND
    GAME.FOLLOWS IS NOT NULL
    AND
    TOTAL_RATING IS NOT NULL
    AND
    PRICE != -1
GROUP BY
    GAME.ID
